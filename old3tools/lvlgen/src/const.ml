let end_line = "\n"
let separator = "\n\n"
let tmp_dir = "t"
let dir_up = "../"
let ml_ext = "ml"
let impossible_case = "impossible case"

let auto_genereted_file_header =
  "This file was auto generated by lvlgen" 

let auto_genereted_ml_file_header =
  "(* " ^ auto_genereted_file_header ^ " *)" ^ end_line
  
let auto_generated_make_file_header =
  "# " ^ auto_genereted_file_header  ^ end_line

let separation_line =
  "---------------------------------------------------------"

let warning = "WARNING:"
let started = "Started"
let succesfully_generated = "Succesfully generated"
let args_help = "Please use [-list|-tree] option"
                          
let tree_generator_warning =
  [ "Call with -tree cannot ganerate valid make file for"; 
    "ocamlopt because ocamlopt doesn't support packing";
    "case when target and packed modules names are the same."; 
    "For example, run the following code";
    "";
    "   ocamlopt -for-pack X -c X.ml";
    "   mkdir tmp";
    "   mv X.cmi tmp/X.cmi";
    "   mv X.cmx tmp/X.cmx";
    "   mv X.o tmp/X.o";
    "   ocamlopt pack X -o X.cmx tmp/X.cmx";
    "";
    "and ocamlopt will get";
    "";
    "   Fatal error: Stack overflow exception";
    "";
    "ocamlopt make file was generated and is present."; 
    "Possibly described problem will be fixed in one of next";
    "versions of OCaml. Please use -list if you want to";
    "use ocamlopt."
  ]
